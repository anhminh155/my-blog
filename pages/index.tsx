import {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage,
} from "next";
import Head from "next/head";
import CBoxBlog from "@/components/CBoxBlog";
import { getBlogs } from "@/server/blogs";
import { BlogPost } from "@/types/blogs";

const Home: NextPage = ({
  blogData,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  console.log(blogData);

  return (
    <>
      <Head>
        <title>My blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="main bg-[#F2F4F7] h-full">
        <div className="banner bg-white w-screen flex justify-center flex-col items-center py-9">
          <h1 className="text-transparent text-6xl bg-clip-text bg-gradient-to-r from-[#C41740] to-[#EA9C28] py-4">
            My Blog MinhDev
          </h1>
          <p className="max-w-2xl text-2xl text-center">
            Full-stack Blog Project with Next.js, TypeScript, TailwindCSS,
            Github GraphQL
          </p>
        </div>
        <div className="list-blog max-w-7xl py-4 mx-5 xl:mx-auto">
          <h2 className="font-bold text-2xl pb-5">Daily Digest</h2>

          {blogData.map((blog: BlogPost, i: number) => (
            <div key={i} className="pb-4">
              <CBoxBlog
                author={blog.author}
                date={blog.createdAt}
                title={blog.title}
                description={blog.bodyText}
                tags={blog.tags}
                url={blog.url}
              />
            </div>
          ))}
        </div>
      </div>
    </>
  );
};

export default Home;

// You should use getServerSideProps when:
// - Only if you need to pre-render a page whose data must be fetched at request time

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  // const { data } = await  // your fetch function here
  const blogs: BlogPost[] = await getBlogs();

  console.log(blogs);

  return {
    props: {
      blogData: blogs,
    },
  };
};
